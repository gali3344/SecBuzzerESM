<system>
  workers 6
  root_dir /fluentd/Buffers/
</system>

<label @FLUENT_LOG>
  <match **>
    @type stdout
  </match>
</label>

# suricata's worker
<worker 0>
  @include /fluentd/etc/suricata.conf
</worker>

<worker 1-2>
  <source>
    @type udp
    tag syslog
    <parse>
      @type regexp
      expression /^\<(?<pri>[0-9]+)\>(?<timestamp>[^ ]* {1,2}[^ ]* [^ ]*) (?:Message forwarded from )?(?<host>[^ ]*) (?<ident>[^ :\[]*)(?:\[(?<pid>[0-9]+)\])?(?:[^\:]*\:)? *(?<message>.*)$/
    </parse>
    source_address_key _ip
    source_hostname_key _hostname
    port 514
    bind 0.0.0.0
    message_length_limit 1MB
  </source>
</worker>

<worker 3-4>
  <source>
    @type udp
    tag cef
    <parse>
      @type none
    </parse>
    source_address_key _ip
    source_hostname_key _hostname
    port 515
    bind 0.0.0.0
    message_length_limit 1MB
  </source>
</worker>

<worker 5>
  <source>
    @type forward
    port 24224
    bind 0.0.0.0
    resolve_hostname true
    source_address_key _ip
    source_hostname_key _hostname
  </source>
</worker>

# pri @timestamp hostname Parser
<filter cef.**>
  @type parser
  key_name message
  emit_invalid_record_to_error false
  reserve_data true
  <parse>
    @type regexp
    expression /(?:^<(?<pri>[\d]+)>(?<timestamp>(?:\w{3}\s+\d+\s+\d+:\d+:\d+)|(?:d{4}\-\d{2}\-\d{2}T\d{2}\:\d{2}\:\d{2}\+\d{2}\:\d{2})|(?:\w{3}\s+\d+\s\d+\s\d+:\d+:\d+)) (?<hostname>[^\s\|]+))/
  </parse>
</filter>

# CEF head Parser
<filter cef.**>
  @type parser
  key_name message
  reserve_data true
  <parse>
    @type regexp
    expression /CEF:(?:\s)?(?<cef_version>[\w\W]+)\|(?<cef_device_vendor>[\w\W]+)\|(?<cef_device_product>[\w\W]+)\|(?<cef_device_version>[\w\W]+)\|(?<cef_device_event_class_id>[\w\W]+)\|(?<cef_name>[\w\W]+)\|(?<cef_severity>[\w\W]+)\|/
  </parse>
</filter>

#kvp Parser
<filter cef.**>
    @type kvp
    parse_key message
    remove_parse_key false
    pattern (?:^(?:[^|]*\|){7}\s)?([^=\s\|]+)=((?:\\\\=|[^=])+)(?:\s|$)
</filter>

#kvp Null value Parser
<filter cef.**>
    @type               kvp
    parse_key           message
    remove_parse_key    true
    pattern (?:^(?:[^|]*\|){7}\s)?([^=\s\|]+)=((?:\\\\=|\s)+)
</filter>

#pri Parser
<filter cef.** syslog.**>
  @type record_transformer
  auto_typecast true
  enable_ruby true
  <record>
    facility ${(record["pri"].to_i / 8).to_s}
    severity ${(record["pri"].to_i % 8).to_s}
    log_time ${if record["timestamp"].length == 15 then Time.strptime(record["timestamp"], "%b %d %H:%M:%S").strftime('%Y-%m-%dT%H:%M:%S.%N%:z') elsif record["timestamp"].length == 20 then (Time.parse(record["timestamp"]) + 28800).strftime('%Y-%m-%dT%H:%M:%S.%N%:z') end}
  </record>
</filter>

<filter **>
  @type record_transformer
  <record>
    _log_type ${tag}
  </record>
</filter>

<filter eventlog.**>
  @type record_transformer
  auto_typecast true
  enable_ruby true
  <record>
    log_time ${Time.strptime(record["time_generated"], "%Y-%m-%d %H:%M:%S %z").strftime('%Y-%m-%dT%H:%M:%S.%N%:z')}
  </record>
</filter>

<match **>
@type copy
  # <store>
  #   @type stdout
  # </store>
  <store>
    @type elasticsearch
    host localhost
    port 19200
    index_name lm-%Y-%m-%d
    include_timestamp true
    reload_on_failure true
    reconnect_on_error true
    with_transporter_log true
    reload_connections false
    request_timeout 15s 
    <buffer tag, time>
      @type file # or memory
      path /fluentd/Buffers/ES_Buffers/
      flush_mode interval
      flush_interval 30s
      flush_thread_count 4
      timekey 1d
      chunk_limit_size 15M
      total_limit_size 5G # default is 64G
      timekey_use_utc false
      retry_max_interval 30s
    </buffer>
  </store>
</match>
